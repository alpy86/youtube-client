{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/components/auth/auth.component.ts","webpack:///src/app/auth/components/auth/auth.component.html","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/core/components/header/header.component.ts","webpack:///src/app/core/components/header/header.component.html","webpack:///src/app/core/components/sort/sort.component.ts","webpack:///src/app/core/components/sort/sort.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/core/interceptors/api.interceptor.ts","webpack:///src/app/core/pages/not-found/not-found.component.ts","webpack:///src/app/core/pages/not-found/not-found.component.html","webpack:///src/app/core/services/http.service.ts","webpack:///src/app/core/services/sort.service.ts","webpack:///src/app/shared/directive/sort-by-date.directive.ts","webpack:///src/app/shared/pipe/filter.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/youtube/components/card/card.component.ts","webpack:///src/app/youtube/components/card/card.component.html","webpack:///src/app/youtube/components/list-cards/list-cards.component.ts","webpack:///src/app/youtube/components/list-cards/list-cards.component.html","webpack:///src/app/youtube/pages/detail-info/detail-info.component.ts","webpack:///src/app/youtube/pages/detail-info/detail-info.component.html","webpack:///src/app/youtube/youtube-routing.module.ts","webpack:///src/app/youtube/youtube.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","YoutubeModule","canLoad","AuthModule","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthRoutingModule","forChild","AuthComponent","authService","form","setToken","value","login","onSubmit","AuthService","router","login$","isLogin","asObservable","name","token","Math","floor","random","Date","now","localStorage","setItem","setStateLogin","navigate","getItem","removeItem","next","providedIn","HeaderComponent","httpService","viewSortMenu","viewSearchCards","inputSearch","isAuth","isLocalStorageValue","subscribe","data","inputElem","nativeElement","pipe","event","target","val","length","evt","setSearchValue","clearLogin","toggleSortMenu","static","SortComponent","sortService","inputSort","getSortCardsByDate","getSortCardsByViews","getSortCardsByWord","sortByDate","sortByViews","sortByWord","CoreModule","AuthGuard","state","route","segments","ApiInterceptor","request","console","log","url","indexOf","handle","clone","API_URL","API_TOKEN","NotFoundComponent","HttpService","http","step","valueCards$","valueCards","searchValue","getData","get","values","dataId","items","map","el","videoId","urlNext","join","response","SortService","title","responseDetails","getResponse","sort","a","b","snippet","publishedAt","transferData","Number","statistics","viewCount","filter","SortByDateDirective","renderer","publishDate","parse","date","differenceOfTime","differenceOfDays","round","setStyle","appSortByDate","changeColorForBorder","FilterPipe","field","SharedModule","CardComponent","cardData","channelId","goToDetailInfo","ListCardsComponent","searchedList","DetailInfoComponent","activateRoute","snapshot","params","cards","filterArrCards","card","datePublish","goToBackListCards","canActivate","YouTubeRoutingModule","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from './core/pages/not-found/not-found.component';\nimport { AuthGuard } from './core/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  {\n    path: 'main',\n    loadChildren: () => import('./youtube/youtube.module').then(m => m.YoutubeModule),\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\n  },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\n  constructor () {\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthModule } from './auth/auth.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { YoutubeModule } from './youtube/youtube.module';\nimport { AppComponent } from './app.component';\n\nimport { SortService } from './core/services/sort.service';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ApiInterceptor } from './core/interceptors/api.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AuthModule,\n    CoreModule,\n    SharedModule,\n    YoutubeModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    AuthGuard,\n    SortService,\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthComponent } from './components/auth/auth.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    component: AuthComponent,\r\n    pathMatch: 'full'\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [ AuthComponent ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    AuthRoutingModule\n  ],\n  exports: [ AuthComponent ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../services/auth.service';\nimport { Subject } from 'rxjs/internal/Subject';\n\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  public login: string;\n  public password: string;\n\n  constructor (private authService: AuthService) { }\n\n  public ngOnInit(): void {\n  }\n\n  public onSubmit(form: NgForm): void {\n    this.authService.setToken(form.value.login);\n  }\n}\n","<div class=\"box-form-login\">\n  <h1>Login</h1>\n  <form #myTemplateVar=\"ngForm\">\n    <div class=\"form-group\">\n      <label class=\"label-login\" for=\"login\">Login</label>\n      <input type=\"text\" class=\"form-control\" id=\"login\" name=\"login\" [(ngModel)]=\"login\" required>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"label-login\" for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" minlength=\"6\">\n    </div>\n    <button type=\"submit\" class=\"btn-submit\" (click)=\"onSubmit(myTemplateVar)\" [disabled]=\"myTemplateVar.invalid\">Login</button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public token: string;\n  public login$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public isLogin = this.login$.asObservable();\n\n  constructor(private router: Router) { }\n\n  public setToken(name: string): void {\n    this.token = `${name}${Math.floor(Math.random() * Date.now())}`;\n    localStorage.setItem('loginToken', this.token);\n    this.setStateLogin(true);\n    this.router.navigate(['main']);\n  }\n\n  public isLocalStorageValue(): void {\n    if (localStorage.getItem('loginToken')) {\n      this.setStateLogin(true);\n    } else {\n      this.router.navigate(['auth']);\n    }\n  }\n\n  public clearLogin(): void {\n    localStorage.removeItem('loginToken');\n    this.setStateLogin(false);\n    this.router.navigate(['auth']);\n  }\n\n  public setStateLogin(login: boolean) {\n    this.login$.next(login);\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n// import { FilterPipe } from 'src/app/shared/pipe/filter.pipe';\nimport { SortService } from '../../services/sort.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport { SearchItem, YoutubeResponse } from 'src/app/youtube/models/youtube-response.model';\nimport { HttpService } from '../../services/http.service';\nimport { BehaviorSubject, fromEvent } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @ViewChild('inputTag', { static: false }) inputElem: any;\n\n  public viewSortMenu: boolean = false;\n  public viewSearchCards: boolean = false;\n  public inputSearch: string = '';\n  public isAuth: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private httpService: HttpService,\n    public router: Router\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.authService.isLocalStorageValue();\n    this.authService.isLogin.subscribe(data => this.isAuth = data);\n  }\n\n  public ngAfterViewInit(): void {\n    fromEvent(this.inputElem.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(700),\n        map((event: InputEvent) => (<HTMLInputElement>event.target).value),\n        filter(val => val.length > 2),\n        distinctUntilChanged(),\n      )\n      .subscribe(evt => {\n        this.httpService.setSearchValue(evt);\n      });\n  }\n\n  public toggleSortMenu(): void {\n    this.viewSortMenu = !this.viewSortMenu;\n  }\n\n  // public initSearch(): void {\n  //   if (this.inputSearch.length > 2) {\n  //     this.httpService.setSearchValue(this.inputSearch);\n  //   }\n  // }\n\n  public clearLogin(): void {\n    this.authService.clearLogin();\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"box-search\">\n    <img class=\"img-logo\" src=\"/assets/logo.svg\" width=\"50\" alt=\"logo\">\n    <input type=\"text\" #inputTag class=\"input-search\" [(ngModel)]=\"inputSearch\">\n    <!-- (ngModelChange)=\"initSearch()\" -->\n    <!-- <div class=\"btn-search\" (click)=\"goToSearchCards()\">search</div> -->\n    <div class=\"btn-sort\" (click)=\"toggleSortMenu()\">\n      <img src=\"/assets/sort.svg\" width=\"20\" alt=\"sort\">\n    </div>\n  </div>\n  <div class=\"box-login\">\n    <a routerLink=\"/auth\" class=\"route-login\">\n      <div class=\"box-btn-login\">\n        <p class=\"text-login\">Login</p>\n        <img class=\"img-login\" src=\"/assets/login.svg\" width=\"30\" alt=\"login\">\n      </div>\n    </a>\n    <a routerLink=\"\" class=\"route-login\" (click)=\"clearLogin()\" *ngIf=\"isAuth\">\n      <div class=\"box-btn-login\">\n        <p class=\"text-login\" >Logout</p>\n      </div>\n    </a>\n  </div>\n</div>\n<app-sort *ngIf=\"viewSortMenu\"></app-sort>\n<!-- (onInputSort)=\"getSortCardsByWord($event)\" -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { SortService } from '../../services/sort.service';\n\n@Component({\n  selector: 'app-sort',\n  templateUrl: './sort.component.html',\n  styleUrls: ['./sort.component.scss']\n})\nexport class SortComponent implements OnInit {\n\n  // @Output() public onInputSort: EventEmitter<string> = new EventEmitter();\n\n  public inputSort: string = '';\n\n  constructor(private sortService: SortService) { }\n\n  public ngOnInit(): void {\n  }\n\n  public sortByDate(): void {\n    this.sortService.getSortCardsByDate();\n  }\n\n  public sortByViews(): void {\n    this.sortService.getSortCardsByViews();\n  }\n\n  // public sortByWord(): void {\n  //   this.onInputSort.emit(this.inputSort);\n  // }\n  public sortByWord(): void {\n    this.sortService.getSortCardsByWord(this.inputSort);\n  }\n}\n","<p>Sorting by:</p>\n<p class=\"btn-sort\" (click)=\"sortByDate()\">date</p>\n<p class=\"btn-sort\" (click)=\"sortByViews()\">count of views</p>\n<p class=\"text-sort-word\">by word or sentence</p>\n<input class=\"input-sort\" type=\"text\" [(ngModel)]=\"inputSort\" (ngModelChange)=\"sortByWord()\">\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { SortComponent } from './components/sort/sort.component';\nimport { FormsModule } from '@angular/forms';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [ HeaderComponent, SortComponent, NotFoundComponent ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule\n  ],\n  exports: [HeaderComponent, NotFoundComponent]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  CanLoad,\n  Route,\n  UrlSegment,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanLoad {\n  public canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | boolean | UrlTree {\n      if (localStorage.getItem('loginToken')) {\n        return true;\n      }\n      return false;\n  }\n  public canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n      if (localStorage.getItem('loginToken')) {\n        return true;\n      }\n      return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    console.log(request);\n    if (request.url.indexOf('type=video') > -1) {\n      return next.handle(\n        request.clone({\n        url: `${environment.API_URL}/search?key=${environment.API_TOKEN}&${request.url}`\n      }));\n    } else if (request.url.indexOf('id=') > -1) {\n      return next.handle(\n        request.clone({\n        url: `${environment.API_URL}/videos?key=${environment.API_TOKEN}&${request.url}`\n      }));\n    } else {\n      return next.handle(request);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  public ngOnInit(): void {\n  }\n\n}\n","<div class=\"box-message\">\n  <img class=\"img-error\" src=\"./../../../../assets/404.svg\" width=\"100\" alt=\"Error404\">\n  <div class=\"message\">\n    <p class=\"text-message\">Error 404</p>\n    <p class=\"text-message\">Sorry, something went wrong((</p>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { YoutubeResponse, SearchItem } from 'src/app/youtube/models/youtube-response.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n  public data: Array<SearchItem>;\n  public dataId: Array<string>;\n  public response: YoutubeResponse;\n  public searchValue: string;\n  public step: number = 0;\n  public valueCards$: BehaviorSubject<Array<SearchItem>> = new BehaviorSubject<Array<SearchItem>>([]);\n  public valueCards: Observable<Array<SearchItem>> = this.valueCards$.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  setSearchValue(value: string): void {\n    this.searchValue = value;\n    if (!this.step) {\n      this.router.navigate(['main']);\n    }\n    this.step += 1;\n    this.getData(this.searchValue);\n  }\n\n  getData(value: string): void {\n    let url = `type=video&part=snippet&maxResults=15&q=${value}`;\n\n    this.http.get(url).subscribe((values: YoutubeResponse) => {\n      this.dataId = values.items.map((el: any) => el = el.id.videoId);\n      let urlNext = `id=${this.dataId.join(',')}&part=snippet,statistics`;\n\n      this.http.get(urlNext).subscribe((data: YoutubeResponse) => {\n        this.valueCards$.next(data.items);\n        this.response = data;\n      });\n    });\n  }\n\n  getResponse(): YoutubeResponse {\n    return this.response;\n  }\n\n  goToBackListCards(): void {\n    this.router.navigate(['main']);\n  }\n\n  transferData(value: Array<SearchItem>) {\n    this.valueCards$.next(value);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchItem, YoutubeResponse } from 'src/app/youtube/models/youtube-response.model';\nimport { HttpService } from './http.service';\n\n@Injectable()\n\nexport class SortService {\n  private response: YoutubeResponse;\n  public title: string = 'youtube-client-app';\n  public responseDetails: Array<SearchItem> = [];\n  // public currentValue: string;\n\n  constructor (private httpService: HttpService) { }\n\n  public getSortCardsByDate(): void {\n    this.response = this.httpService.getResponse();\n\n    this.responseDetails = this.response.items.sort((a, b) =>\n      a.snippet.publishedAt > b.snippet.publishedAt ? -1 : 1);\n\n    this.httpService.transferData(this.responseDetails);\n  }\n\n  public getSortCardsByViews(): void {\n    this.response = this.httpService.getResponse();\n\n    this.responseDetails = this.response.items.sort((a, b) =>\n      Number(b.statistics.viewCount) - Number(a.statistics.viewCount));\n\n    this.httpService.transferData(this.responseDetails);\n  }\n\n  public getSortCardsByWord(value: string): void {\n    this.response = this.httpService.getResponse();\n\n    if (!value) {\n      this.responseDetails = this.response.items;\n    } else {\n      this.responseDetails = this.response.items.filter((el) => el.snippet.title.indexOf(value) > 0);\n    }\n\n    this.httpService.transferData(this.responseDetails);\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appSortByDate]'\n})\nexport class SortByDateDirective {\n  @Input() private appSortByDate: string;\n  private date: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n  }\n\n  private changeColorForBorder(): void {\n    let publishDate: number = Date.parse(this.date);\n    let differenceOfTime: number = Date.now() - publishDate;\n    let differenceOfDays: number = Math.round(differenceOfTime / 60000 / 60 / 24);\n    switch (true) {\n      case differenceOfDays > 180:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'red');\n        break;\n\n      case differenceOfDays < 30 && differenceOfDays >= 7:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'green');\n        break;\n\n      case differenceOfDays < 7:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'blue');\n        break;\n\n      default:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'yellow');\n        break;\n    }\n  }\n\n  public ngOnChanges(): void {\n    this.date = this.appSortByDate;\n    this.changeColorForBorder();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SearchItem } from 'src/app/youtube/models/youtube-response.model';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  public transform(value: Array<SearchItem>, field: string): Array<SearchItem> {\n    return value.filter((el) => el.snippet.title.indexOf(field) > 0);\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FilterPipe } from './pipe/filter.pipe';\r\nimport { SortByDateDirective } from './directive/sort-by-date.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    FilterPipe,\r\n    SortByDateDirective\r\n  ],\r\n  exports: [\r\n    FilterPipe,\r\n    SortByDateDirective\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Card } from '../../models/card.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() public cardData: Card;\n\n  constructor(public router: Router) { }\n\n  public ngOnInit(): void {\n  }\n\n  public goToDetailInfo(): void {\n    this.router.navigate(['detail', this.cardData.snippet.channelId]);\n  }\n}\n","<div class=\"card\" [appSortByDate]=\"cardData.snippet.publishedAt\">\n  <img class=\"video-thumbnail\" src=\"{{ cardData['snippet']['thumbnails']['medium']['url'] }}\" width=\"220\"\n    alt=\"video-thumbnail\">\n  <div class=\"box-statistic\">\n    <div class=\"item-statistic\">\n      <img class=\"img-stat\" src=\"/assets/viewed.svg\" alt=\"viewed\">\n      <span class=\"value-stat\">{{ cardData['statistics']['viewCount'] }}</span>\n      <img class=\"img-stat\" src=\"/assets/liked.svg\" alt=\"liked\">\n      <span class=\"value-stat\">{{ cardData['statistics']['likeCount'] }}</span>\n    </div>\n    <div class=\"item-statistic\">\n      <img class=\"img-stat\" src=\"/assets/dislike.svg\" alt=\"dislike\">\n      <span class=\"value-stat\">{{ cardData['statistics']['dislikeCount'] }}</span>\n      <div class=\"img-comments\">\n        <div class=\"img-elem elem-pos-top\"></div>\n        <div class=\"img-elem elem-pos-bottom\"></div>\n      </div>\n      <span class=\"value-stat\">{{ cardData['statistics']['commentCount'] }}</span>\n    </div>\n  </div>\n  <div class=\"video-title\">{{ cardData['snippet']['title'] }}</div>\n  <div class=\"btn-more-info\" (click)=\"goToDetailInfo()\">more...</div>\n</div>\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { SearchItem, YoutubeResponse } from '../../models/youtube-response.model';\nimport { Card } from '../../models/card.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { SortService } from 'src/app/core/services/sort.service';\nimport { HttpService } from 'src/app/core/services/http.service';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-list-cards',\n  templateUrl: './list-cards.component.html',\n  styleUrls: ['./list-cards.component.scss'],\n  // providers: [HttpService]\n})\nexport class ListCardsComponent implements OnInit {\n  public cardItem: Card;\n  public searchedList: Array<SearchItem>;\n  public dataId: Array<string>;\n  public data: Array<SearchItem>;\n  private searchValue: string;\n\n  constructor(private httpService: HttpService, public route: ActivatedRoute, private http: HttpClient) { }\n\n  public ngOnInit(): void {\n    // this.searchedList = this.sortService.getSearchCards();\n    this.httpService.valueCards.subscribe(data => this.searchedList = data);\n  }\n\n  // private getData(): void {\n  //   this.httpService.getData().subscribe(\n  //     (data) => {\n  //       this.data = data;\n  //     });\n  // }\n    //  this.httpService.getList().subscribe((data: any) => {\n    //   this.searchedList = data.items;\n    //   console.log(this.searchedList);\n    //  });\n\n\n\n\n\n\n\n\n    // public ngOnInit(): void {\n    //   // this.searchedList = this.sortService.getSearchCards();\n    //   this.searchValue = this.httpService.getSearchValue();\n    //   let url = `${environment.baseUrl}/search?key=${environment.key}&type=video&part=snippet&maxResults=15&q=${this.searchValue}`;\n    //   console.log(url);\n    //   this.http.get(url).subscribe((values: YoutubeResponse) => {\n    //     console.log(values.items);\n    //     this.dataId = values.items.map((el: any) => el = el.id.videoId);\n    //     console.log(this.dataId);\n    //     let urlNext = `${environment.baseUrl}/videos?key=${environment.key}&id=${this.dataId.join(',')}&part=snippet,statistics`;\n    //     console.log(urlNext);\n    //     this.http.get(urlNext).subscribe((data: YoutubeResponse) => {\n    //       this.searchedList = data.items;\n    //     });\n    //   });\n    // }\n\n}\n","<app-card *ngFor=\"let cardItem of searchedList\" [cardData] = \"cardItem\"></app-card>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { CardDetail } from '../../models/card.model';\nimport { SearchItem } from '../../models/youtube-response.model';\nimport { HttpService } from 'src/app/core/services/http.service';\n\n@Component({\n  selector: 'app-detail-info',\n  templateUrl: './detail-info.component.html',\n  styleUrls: ['./detail-info.component.scss']\n})\nexport class DetailInfoComponent implements OnInit {\n  @Input() public card: CardDetail;\n  public datePublish: string;\n  public cards: SearchItem[];\n  public id: Object;\n\n  constructor(\n    public router: Router,\n    private activateRoute: ActivatedRoute,\n    private httpService: HttpService\n    ) {\n    this.id = activateRoute.snapshot.params.id;\n  }\n\n  public ngOnInit(): void {\n    this.httpService.valueCards.subscribe(data => this.cards = data);\n    // let cards: SearchItem[] = this.sortService.getSearchCards();\n    let filterArrCards: SearchItem[] = this.cards.filter((val) => val.snippet.channelId === this.id);\n    this.card = filterArrCards[0];\n    this.datePublish = this.card.snippet.publishedAt;\n  }\n\n  // public goToBackListCards(): void {\n  //   this.sortService.goToBackListCards();\n  // }\n  public goToBackListCards(): void {\n    this.httpService.goToBackListCards();\n  }\n}\n","<div class=\"detail-card\" [appSortByDate]=\"card['snippet']['publishedAt']\">\n  <div class=\"btn-back\" (click)=\"goToBackListCards()\">&lt;</div>\n  <img class=\"video-thumbnail\" src=\"{{ card['snippet']['thumbnails']['standard']['url'] }}\" width=\"640\"\n    alt=\"video-thumbnail\">\n  <div class=\"box-info\">\n    <div class=\"box-title\">\n      <p class=\"video-title\">{{ card['snippet']['title'] }}</p>\n      <p class=\"video-date\">{{ datePublish | date:'fullDate' }}</p>\n    </div>\n    <div class=\"box-description\">\n      <p class=\"header-description\">Description</p>\n      <p class=\"text-description\">{{ card['snippet']['description'] }}</p>\n    </div>\n    <div class=\"box-statistic\">\n      <img class=\"img-stat\" src=\"./../../../../assets/viewed.svg\" alt=\"viewed\">\n      <span class=\"value-stat\">{{ card['statistics']['viewCount'] }}</span>\n      <img class=\"img-stat\" src=\"./../../../../assets/liked.svg\" alt=\"liked\">\n      <span class=\"value-stat\">{{ card['statistics']['likeCount'] }}</span>\n      <img class=\"img-stat\" src=\"./../../../../assets/dislike.svg\" alt=\"dislike\">\n      <span class=\"value-stat\">{{ card['statistics']['dislikeCount'] }}</span>\n      <div class=\"img-comments\">\n        <div class=\"img-elem elem-pos-top\"></div>\n        <div class=\"img-elem elem-pos-bottom\"></div>\n      </div>\n      <span class=\"value-stat\">{{ card['statistics']['commentCount'] }}</span>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListCardsComponent } from './components/list-cards/list-cards.component';\r\nimport { DetailInfoComponent } from './pages/detail-info/detail-info.component';\r\nimport { AuthGuard } from '../core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'main',\r\n    component: ListCardsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detail/:id',\r\n    component: DetailInfoComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class YouTubeRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '@shared/shared.module';\nimport { CardComponent } from './components/card/card.component';\nimport { ListCardsComponent } from './components/list-cards/list-cards.component';\nimport { DetailInfoComponent } from './pages/detail-info/detail-info.component';\nimport { FormsModule } from '@angular/forms';\nimport { YouTubeRoutingModule } from './youtube-routing.module';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n    ListCardsComponent,\n    DetailInfoComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    YouTubeRoutingModule\n  ],\n  exports: [ListCardsComponent, DetailInfoComponent]\n})\nexport class YoutubeModule { }\n","import { Environment } from './environment.model';\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: Environment = {\n  production: false,\n  API_URL: 'https://www.googleapis.com/youtube/v3',\n  API_TOKEN: 'AIzaSyCLxHlKU1dysOO6UGTuQt-pVn7kLuadUk8'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}