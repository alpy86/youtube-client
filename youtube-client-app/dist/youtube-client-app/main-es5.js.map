{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/components/auth/auth.component.ts","webpack:///src/app/auth/components/auth/auth.component.html","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/core/components/header/header.component.ts","webpack:///src/app/core/components/header/header.component.html","webpack:///src/app/core/components/sort/sort.component.ts","webpack:///src/app/core/components/sort/sort.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/core/interceptors/api.interceptor.ts","webpack:///src/app/core/pages/not-found/not-found.component.ts","webpack:///src/app/core/pages/not-found/not-found.component.html","webpack:///src/app/core/services/http.service.ts","webpack:///src/app/core/services/sort.service.ts","webpack:///src/app/shared/directive/sort-by-date.directive.ts","webpack:///src/app/shared/pipe/filter.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/youtube/components/card/card.component.ts","webpack:///src/app/youtube/components/card/card.component.html","webpack:///src/app/youtube/components/list-cards/list-cards.component.ts","webpack:///src/app/youtube/components/list-cards/list-cards.component.html","webpack:///src/app/youtube/pages/detail-info/detail-info.component.ts","webpack:///src/app/youtube/pages/detail-info/detail-info.component.html","webpack:///src/app/youtube/youtube-routing.module.ts","webpack:///src/app/youtube/youtube.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","YoutubeModule","canLoad","AuthModule","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthRoutingModule","forChild","AuthComponent","authService","form","setToken","value","login","onSubmit","AuthService","router","login$","isLogin","asObservable","name","token","Math","floor","random","Date","now","localStorage","setItem","setStateLogin","navigate","getItem","removeItem","next","providedIn","HeaderComponent","httpService","inputSearch","isAuth","stateLogin","viewSortMenu","isLocalStorageValue","subscribe","data","inputElem","nativeElement","pipe","event","target","length","getData","clearLogin","toggleSortMenu","static","SortComponent","sortService","inputSort","getSortCardsByDate","getSortCardsByViews","getSortCardsByWord","sortByDate","sortByViews","sortByWord","CoreModule","AuthGuard","state","route","segments","ApiInterceptor","request","console","log","url","indexOf","handle","clone","API_URL","API_TOKEN","NotFoundComponent","goToBack","HttpService","http","valueCards$","valueCards","get","values","dataId","items","map","el","videoId","urlNext","join","response","SortService","responseDetails","getResponse","sort","a","b","snippet","publishedAt","transferData","Number","statistics","viewCount","filter","title","toLowerCase","SortByDateDirective","renderer","publishDate","parse","date","differenceOfTime","differenceOfDays","round","setStyle","appSortByDate","changeColorForBorder","FilterPipe","field","SharedModule","CardComponent","cardData","channelId","goToDetailInfo","ListCardsComponent","searchedList","DetailInfoComponent","activateRoute","snapshot","params","cards","filterArrCards","val","card","datePublish","thumbnails","standard","high","goToBackListCards","YouTubeRoutingModule","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from './core/pages/not-found/not-found.component';\nimport { AuthGuard } from './core/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'main',\n    loadChildren: () => import('./youtube/youtube.module').then(m => m.YoutubeModule),\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\n  },\n  {\n    path: '',\n    redirectTo: 'main',\n    pathMatch: 'full'\n  },\n  { path: '**',\n    component: NotFoundComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent {\n\n  constructor () { }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AuthModule } from './auth/auth.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { YoutubeModule } from './youtube/youtube.module';\n\nimport { AppComponent } from './app.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ApiInterceptor } from './core/interceptors/api.interceptor';\nimport { SortService } from './core/services/sort.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    AuthModule,\n    CoreModule,\n    SharedModule,\n    YoutubeModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    AuthGuard,\n    SortService,\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthComponent } from './components/auth/auth.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    component: AuthComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AuthRoutingModule { }\r\n","import { AuthRoutingModule } from './auth-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AuthComponent } from './components/auth/auth.component';\n\n@NgModule({\n  declarations: [ AuthComponent ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AuthRoutingModule\n  ],\n  exports: [ AuthComponent ]\n})\n\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  public login: string;\n  public password: string;\n\n  constructor (private authService: AuthService) { }\n\n  public ngOnInit(): void {\n  }\n\n  public onSubmit(form: NgForm): void {\n    this.authService.setToken(form.value.login);\n  }\n}\n","<div class=\"box-form-login\">\n  <h1>Login</h1>\n  <form #myTemplateVar=\"ngForm\">\n    <div class=\"form-group\">\n      <label class=\"label-login\" for=\"login\">Login</label>\n      <input type=\"text\" class=\"form-control\" id=\"login\" name=\"login\" [(ngModel)]=\"login\" required>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"label-login\" for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\"\n        name=\"password\" #amount=\"ngModel\" [(ngModel)]=\"password\" minlength=\"6\">\n      <div *ngIf=\"amount.invalid\" class=\"alert-danger\">\n        Required length is at least 6 characters\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn-submit\" (click)=\"onSubmit(myTemplateVar)\"\n      [disabled]=\"myTemplateVar.invalid\">Login</button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  private token: string;\n  public login$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public isLogin: Observable<boolean> = this.login$.asObservable();\n\n  constructor(private router: Router) { }\n\n  public setToken(name: string): void {\n    this.token = `${name}${Math.floor(Math.random() * Date.now())}`;\n    localStorage.setItem('loginToken', this.token);\n    this.setStateLogin(true);\n    this.router.navigate(['main']);\n  }\n\n  public isLocalStorageValue(): void {\n    if (localStorage.getItem('loginToken')) {\n      this.setStateLogin(true);\n    } else {\n      this.router.navigate(['auth']);\n    }\n  }\n\n  public clearLogin(): void {\n    localStorage.removeItem('loginToken');\n    this.setStateLogin(false);\n    this.router.navigate(['auth']);\n  }\n\n  public setStateLogin(login: boolean): void {\n    this.login$.next(login);\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport { HttpService } from '../../services/http.service';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\n\nexport class HeaderComponent implements OnInit {\n  @ViewChild('inputTag', { static: false }) public inputElem: ElementRef;\n\n  public inputSearch: string = '';\n  public isAuth: boolean = false;\n  public stateLogin: string = 'Login';\n  public viewSortMenu: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private httpService: HttpService,\n  ) { }\n\n  public ngOnInit(): void {\n    this.authService.isLocalStorageValue();\n\n    this.authService.isLogin.subscribe(data => {\n      this.isAuth = data;\n\n      if (this.isAuth) {\n        this.stateLogin = 'Logout';\n      } else {\n        this.stateLogin = 'Login';\n        this.inputSearch = '';\n      }\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    fromEvent(this.inputElem.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(700),\n        map((event: InputEvent) => (<HTMLInputElement>event.target).value),\n        filter(value => value.length > 2),\n        distinctUntilChanged(),\n      )\n      .subscribe(value => {\n        this.httpService.getData(value);\n      });\n  }\n\n  public clearLogin(): void {\n    if (this.isAuth) {\n      this.authService.clearLogin();\n    }\n  }\n\n  public toggleSortMenu(): void {\n    this.viewSortMenu = !this.viewSortMenu;\n  }\n}\n","<div class=\"wrapper\">\n  <p class=\"text-header\">YouTube Client</p>\n  <div class=\"box-search\">\n    <img class=\"img-logo\" src=\"/assets/logo.svg\" width=\"50\" alt=\"logo\">\n    <input type=\"text\" #inputTag class=\"input-search\" [(ngModel)]=\"inputSearch\" [disabled]=\"!(isAuth)\">\n    <div class=\"btn-sort\" (click)=\"toggleSortMenu()\">\n      <img src=\"/assets/sort.svg\" width=\"20\" alt=\"sort\">\n    </div>\n  </div>\n  <div class=\"btn-login\" (click)=\"clearLogin()\">\n    <p class=\"text-login\">{{ stateLogin }}</p>\n    <img class=\"img-login\" src=\"/assets/login.svg\" width=\"30\" alt=\"login\">\n  </div>\n</div>\n<app-sort *ngIf=\"viewSortMenu\"></app-sort>\n","import { Component, OnInit } from '@angular/core';\nimport { SortService } from '../../services/sort.service';\n\n@Component({\n  selector: 'app-sort',\n  templateUrl: './sort.component.html',\n  styleUrls: ['./sort.component.scss']\n})\n\nexport class SortComponent implements OnInit {\n  public inputSort: string = '';\n\n  constructor(private sortService: SortService) { }\n\n  public ngOnInit(): void {\n  }\n\n  public sortByDate(): void {\n    this.sortService.getSortCardsByDate();\n  }\n\n  public sortByViews(): void {\n    this.sortService.getSortCardsByViews();\n  }\n\n  public sortByWord(): void {\n    this.sortService.getSortCardsByWord(this.inputSort);\n  }\n}\n","<p>Sorting by:</p>\n<p class=\"btn-sort\" (click)=\"sortByDate()\">date</p>\n<p class=\"btn-sort\" (click)=\"sortByViews()\">count of views</p>\n<p class=\"text-sort-word\">by word or sentence</p>\n<input class=\"input-sort\" type=\"text\" [(ngModel)]=\"inputSort\" (ngModelChange)=\"sortByWord()\">\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { SortComponent } from './components/sort/sort.component';\n\n@NgModule({\n  declarations: [ HeaderComponent, SortComponent, NotFoundComponent ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule\n  ],\n  exports: [HeaderComponent, NotFoundComponent]\n})\n\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  CanLoad,\n  Route,\n  UrlSegment,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate, CanLoad {\n  public canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | boolean | UrlTree {\n      return !!localStorage.getItem('loginToken');\n  }\n  public canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n      return !!localStorage.getItem('loginToken');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  public intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    console.log(request);\n    if (request.url.indexOf('type=video') > -1) {\n      return next.handle(\n        request.clone({\n        url: `${environment.API_URL}/search?key=${environment.API_TOKEN}&${request.url}`\n      }));\n    } else if (request.url.indexOf('id=') > -1) {\n      return next.handle(\n        request.clone({\n        url: `${environment.API_URL}/videos?key=${environment.API_TOKEN}&${request.url}`\n      }));\n    } else {\n      return next.handle(request);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\n\nexport class NotFoundComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  public ngOnInit(): void {\n  }\n\n  public goToBack(): void {\n    this.router.navigate(['main']);\n  }\n}\n","<div class=\"box-message\">\n  <img class=\"img-error\" src=\"assets/404.svg\" width=\"100\" alt=\"Error404\">\n  <div class=\"message\">\n    <p class=\"text-message\">Error 404</p>\n    <p class=\"text-message\">Sorry, something went wrong((</p>\n  </div>\n</div>\n<button class=\"btn-go-back\" (click)=\"goToBack()\">Go back</button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { YoutubeResponse, SearchItem } from 'src/app/youtube/models/youtube-response.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n  private dataId: Array<string>;\n  public response: YoutubeResponse;\n  public valueCards$: BehaviorSubject<Array<SearchItem>> = new BehaviorSubject<Array<SearchItem>>([]);\n  public valueCards: Observable<Array<SearchItem>> = this.valueCards$.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  public getData(value: string): void {\n    // tslint:disable-next-line\n    let url: string = `type=video&part=snippet&maxResults=15&q=${value}`;\n\n    this.http.get(url).subscribe((values: YoutubeResponse) => {\n      // tslint:disable-next-line\n      this.dataId = values.items.map((el: any) => el = el.id.videoId);\n      // tslint:disable-next-line\n      let urlNext: string = `id=${this.dataId.join(',')}&part=snippet,statistics`;\n\n      this.http.get(urlNext).subscribe((data: YoutubeResponse) => {\n        this.valueCards$.next(data.items);\n        this.response = data;\n      });\n    });\n  }\n\n  public getResponse(): YoutubeResponse {\n    return this.response;\n  }\n\n  public transferData(value: Array<SearchItem>): void {\n    this.valueCards$.next(value);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchItem, YoutubeResponse } from 'src/app/youtube/models/youtube-response.model';\nimport { HttpService } from './http.service';\n\n@Injectable()\n\nexport class SortService {\n  private response: YoutubeResponse;\n  private responseDetails: Array<SearchItem> = [];\n\n  constructor (private httpService: HttpService) { }\n\n  public getSortCardsByDate(): void {\n    this.response = this.httpService.getResponse();\n\n    this.responseDetails = this.response.items.sort((a, b) =>\n      a.snippet.publishedAt > b.snippet.publishedAt ? -1 : 1);\n\n    this.httpService.transferData(this.responseDetails);\n  }\n\n  public getSortCardsByViews(): void {\n    this.response = this.httpService.getResponse();\n\n    this.responseDetails = this.response.items.sort((a, b) =>\n      Number(b.statistics.viewCount) - Number(a.statistics.viewCount));\n\n    this.httpService.transferData(this.responseDetails);\n  }\n\n  public getSortCardsByWord(value: string): void {\n    this.response = this.httpService.getResponse();\n\n    if (!value) {\n      this.responseDetails = this.response.items;\n    } else {\n      this.responseDetails = this.response.items.filter(\n        (el) => el.snippet.title.toLowerCase().indexOf(value.toLowerCase()) > 0);\n    }\n\n    this.httpService.transferData(this.responseDetails);\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appSortByDate]'\n})\nexport class SortByDateDirective {\n  @Input() private appSortByDate: string;\n\n  private date: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  private changeColorForBorder(): void {\n    let publishDate: number = Date.parse(this.date);\n    let differenceOfTime: number = Date.now() - publishDate;\n    let differenceOfDays: number = Math.round(differenceOfTime / 60000 / 60 / 24);\n    switch (true) {\n      case differenceOfDays > 180:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'red');\n        break;\n\n      case differenceOfDays < 30 && differenceOfDays >= 7:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'green');\n        break;\n\n      case differenceOfDays < 7:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'blue');\n        break;\n\n      default:\n        this.renderer.setStyle(this.el.nativeElement, 'border-bottom-color', 'yellow');\n        break;\n    }\n  }\n\n  public ngOnChanges(): void {\n    this.date = this.appSortByDate;\n    this.changeColorForBorder();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SearchItem } from 'src/app/youtube/models/youtube-response.model';\n\n@Pipe({\n  name: 'filter'\n})\n\nexport class FilterPipe implements PipeTransform {\n\n  public transform(value: Array<SearchItem>, field: string): Array<SearchItem> {\n    return value.filter((el) => el.snippet.title.indexOf(field) > 0);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FilterPipe } from './pipe/filter.pipe';\r\nimport { SortByDateDirective } from './directive/sort-by-date.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    FilterPipe,\r\n    SortByDateDirective\r\n  ],\r\n  exports: [\r\n    FilterPipe,\r\n    SortByDateDirective\r\n  ]\r\n})\r\n\r\nexport class SharedModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Card } from '../../models/card.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\n\nexport class CardComponent implements OnInit {\n  @Input() public cardData: Card;\n\n  constructor(private router: Router) { }\n\n  public ngOnInit(): void {\n  }\n\n  public goToDetailInfo(): void {\n    this.router.navigate(['detail', this.cardData.snippet.channelId]);\n  }\n}\n","<div class=\"card\" [appSortByDate]=\"cardData.snippet.publishedAt\">\n  <img class=\"video-thumbnail\" src=\"{{ cardData['snippet']['thumbnails']['medium']['url'] }}\" width=\"220\"\n    alt=\"video-thumbnail\">\n  <div class=\"box-statistic\">\n    <div class=\"item-statistic\">\n      <img class=\"img-stat\" src=\"/assets/viewed.svg\" alt=\"viewed\">\n      <span class=\"value-stat\">{{ cardData['statistics']['viewCount'] }}</span>\n      <img class=\"img-stat\" src=\"/assets/liked.svg\" alt=\"liked\">\n      <span class=\"value-stat\">{{ cardData['statistics']['likeCount'] }}</span>\n    </div>\n    <div class=\"item-statistic\">\n      <img class=\"img-stat\" src=\"/assets/dislike.svg\" alt=\"dislike\">\n      <span class=\"value-stat\">{{ cardData['statistics']['dislikeCount'] }}</span>\n      <div class=\"img-comments\">\n        <div class=\"img-elem elem-pos-top\"></div>\n        <div class=\"img-elem elem-pos-bottom\"></div>\n      </div>\n      <span class=\"value-stat\">{{ cardData['statistics']['commentCount'] }}</span>\n    </div>\n  </div>\n  <div class=\"video-title\">{{ cardData['snippet']['title'] }}</div>\n  <div class=\"btn-more-info\" (click)=\"goToDetailInfo()\">more...</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from 'src/app/core/services/http.service';\nimport { Card } from '../../models/card.model';\nimport { SearchItem } from '../../models/youtube-response.model';\n\n@Component({\n  selector: 'app-list-cards',\n  templateUrl: './list-cards.component.html',\n  styleUrls: ['./list-cards.component.scss'],\n})\n\nexport class ListCardsComponent implements OnInit {\n  public cardItem: Card;\n  public searchedList: Array<SearchItem>;\n\n  constructor(private httpService: HttpService) { }\n\n  public ngOnInit(): void {\n    this.httpService.valueCards.subscribe((data: Array<SearchItem>) => this.searchedList = data);\n  }\n}\n","<app-card *ngFor=\"let cardItem of searchedList\" [cardData] = \"cardItem\"></app-card>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { CardDetail } from '../../models/card.model';\nimport { SearchItem } from '../../models/youtube-response.model';\nimport { HttpService } from 'src/app/core/services/http.service';\n\n@Component({\n  selector: 'app-detail-info',\n  templateUrl: './detail-info.component.html',\n  styleUrls: ['./detail-info.component.scss']\n})\nexport class DetailInfoComponent implements OnInit {\n  public card: CardDetail;\n\n  public cards: SearchItem[];\n  public datePublish: string;\n  public id: Object;\n  public thumbnails: Object;\n\n  constructor(\n    private router: Router,\n    private activateRoute: ActivatedRoute,\n    private httpService: HttpService\n    ) {\n    this.id = activateRoute.snapshot.params.id;\n  }\n\n  public ngOnInit(): void {\n    this.httpService.valueCards.subscribe(data => this.cards = data);\n    let filterArrCards: SearchItem[] = this.cards.filter((val) => val.snippet.channelId === this.id);\n    this.card = filterArrCards[0];\n    this.datePublish = this.card.snippet.publishedAt;\n    this.thumbnails = this.card.snippet.thumbnails.standard || this.card.snippet.thumbnails.high;\n  }\n\n  public goToBackListCards(): void {\n    this.router.navigate(['main']);\n  }\n}\n","<div class=\"detail-card\" [appSortByDate]=\"card['snippet']['publishedAt']\">\n  <div class=\"btn-back\" (click)=\"goToBackListCards()\">&lt;</div>\n  <div class=\"wrapper-img\">\n    <img class=\"video-thumbnail\" src=\"{{ thumbnails['url'] }}\" alt=\"video-thumbnail\">\n  </div>\n  <div class=\"box-info\">\n    <div class=\"box-title\">\n      <p class=\"video-title\">{{ card['snippet']['title'] }}</p>\n      <p class=\"video-date\">{{ datePublish | date:'fullDate' }}</p>\n    </div>\n    <div class=\"box-description\">\n      <p class=\"header-description\">Description</p>\n      <p class=\"text-description\">{{ card['snippet']['description'] }}</p>\n    </div>\n    <div class=\"box-statistic\">\n      <img class=\"img-stat\" src=\"./../../../../assets/viewed.svg\" alt=\"viewed\">\n      <span class=\"value-stat\">{{ card['statistics']['viewCount'] }}</span>\n      <img class=\"img-stat\" src=\"./../../../../assets/liked.svg\" alt=\"liked\">\n      <span class=\"value-stat\">{{ card['statistics']['likeCount'] }}</span>\n      <img class=\"img-stat\" src=\"./../../../../assets/dislike.svg\" alt=\"dislike\">\n      <span class=\"value-stat\">{{ card['statistics']['dislikeCount'] }}</span>\n      <div class=\"img-comments\">\n        <div class=\"img-elem elem-pos-top\"></div>\n        <div class=\"img-elem elem-pos-bottom\"></div>\n      </div>\n      <span class=\"value-stat\">{{ card['statistics']['commentCount'] }}</span>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListCardsComponent } from './components/list-cards/list-cards.component';\r\nimport { DetailInfoComponent } from './pages/detail-info/detail-info.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'main',\r\n    component: ListCardsComponent,\r\n  },\r\n  {\r\n    path: 'detail/:id',\r\n    component: DetailInfoComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class YouTubeRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '@shared/shared.module';\nimport { CardComponent } from './components/card/card.component';\nimport { ListCardsComponent } from './components/list-cards/list-cards.component';\nimport { DetailInfoComponent } from './pages/detail-info/detail-info.component';\nimport { FormsModule } from '@angular/forms';\nimport { YouTubeRoutingModule } from './youtube-routing.module';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n    ListCardsComponent,\n    DetailInfoComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    YouTubeRoutingModule\n  ],\n  exports: [ListCardsComponent, DetailInfoComponent]\n})\n\nexport class YoutubeModule { }\n","import { Environment } from './environment.model';\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: Environment = {\n  production: false,\n  API_URL: 'https://www.googleapis.com/youtube/v3',\n  API_TOKEN: 'AIzaSyCLxHlKU1dysOO6UGTuQt-pVn7kLuadUk8'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}